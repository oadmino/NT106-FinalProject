<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAFoAAAA8CAYAAADmBa1FAAAABGdBTUEAALGPC/xhBQAABNpJREFUeF7t
        m7GOHEUQhu8ReAACx0SEhM5ISZxb8gvAE+AnsFMChCMSCCwROXMEEZIly4EzBxYZkgURZ5891Dd0jf4r
        qmd7rHXvnXt+6dd6u6trqv7uru5Z+c7eEzeMN4WfG7cAex2Pvx0JPjG+Mk5CBGsBdjoOP/jbUcFXRhXs
        ibEF2Ok4/Ow4gIdGFe2ucQ30qz3jdzQgKyG1ek272u0lYyNizX1szEC72n1t3LER941rIvJd+2uTwe0D
        W0oKNhDfLXWcsuRcu8XcNrpdPMAZp34ctBNHLe5uoAS8MLqQlAVPlk8tL9rnYPwDo9tkxP+a4Gq7dgPS
        naVigrg7QVxEJ0ethGhiMK52RI43kTWyIjOozbGEzib/SiDOfgw023rx5oINYpI0xGfLgav9xxLaSYyx
        nJwUsYQos5KRraAMCKtiZxOmfo4lNDutdos6OWqrIlsNugOYoDWwytVfvBpq37GEjs+4coglpPbWqLW5
        ZVuqz3gwat+xhL7yiAHXRFSbNXEcayK1+tqFpuEAdqEDWoXWg7PlTVEPxHjN83a4Cx2g1z8EWEP0GW8w
        2rcLHRB/aq29jMSXmuxwVT+158Vr4jBCAxXQbXW1MhnRJnsVjz8B6KQxUfhVkeFQQsffQg6Rq2OGQ7+V
        OIdd0YAtXXujVNZEBqzatQmjj53wUdVohCMhZ632RmDH7woqGGUDgePhlwGxWdk6aYxHUH/Lw1ctrhj3
        jh07dlxb/PPdp7eNdwdhdqX88LAH3zdOg3Ht1vNhkAQxBEv6/ZAFMQJL+v2QBTECS/r9kAUxAkv6/ZAF
        MQJL+v2QBTECS/r9kAUxAkv6/ZAFsYXnP385vf3jt5lZ/ynYElNJvx+yILbw9S+3JkfWfwq2xFTS74cs
        iC3chW5EFsQW7kI3IgvCef7jF9PF85+m6fyv/6K2T77T7jarSf3w2XTx+73p3d8vi8U0vX3xaB4TbS+e
        fj/X1DePv2nvw7/E9+7PZ7PNtRKaA2UROMLa6ceulhSTQeI1vPn120v2CAmYGG2v9pnIOoEKfa76UZb0
        +yELgiR0lbioiMeKhNjQVhPaxcHPsoJ9BRboyt4q9OLH/OuksaJ1gXh7ZEm/H7IgCHyGBeyCXqK0ZULP
        u6FAxXS6cPOEhbZWoR1xZ8DXj+6U3isuNAIAamPWr8yE9oliN6itcxGCiSxtW4S+9MxkIWQxRZb0+yEL
        Yi3pyCwpxgH8qK0zG/PeQgfbln5Y0u+HLAivf3xm/cosqblOGjis1Hatf4vQWpr0BuS8NkK7EMAPwoW2
        VQ9d7+h3/K+G2ni/LehELmLGcqX2Mgl+4GXlbTljDLHPWdLvhywIuFyRyqmOoEzAnLS1HbreIYADgbCj
        NqtfnTC9jbj98rwCFZp/O/xuDtUPcPvIkn4/ZEHMZCXJfVQxH3LlEKoJTX9MeoGJzDi113KgYKV7HCo0
        9F0Qoc9Ve2VJvx+yIJSsqvnubEnxyXftZ1UiQBTB6atsHm+cS0mZpEjEdls+/Vl84j9Ojvd5fOwi4jkU
        Eyzp90MWxAgs6fdDFsQILOn3QxbECCzp90MWxAgs6fdDFsQILOn3QxbECCzp90MWxAgs6feDPfRVDGIA
        8icffWEP5f9GZ8F8zGz9W5zjwh58w3hzELb8sdKO0+Ls7F//qaSWOmEo0gAAAABJRU5ErkJggg==
</value>
  </data>
  <data name="pictureBox2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        zTGVGFw0Ji4AAAAASUVORK5CYII=
</value>
  </data>
</root>